version: '3.7'
services:
  api:
    image: ${API_IMAGE:-iracanyes/portfolio_api}
    hostname: backend
    restart: always
    environment:
      - VIRTUAL_HOST=${API_VIRTUAL_HOST:?API_VIRTUAL_HOST is not set or empty}
      - VIRTUAL_PORT=${API_VIRTUAL_PORT:?API_VIRTUAL_PORT is not set or empty}
      - VIRTUAL_PROTO=${API_VIRTUAL_PROTO:-https}
      - DEFAULT_HOST=${API_DEFAULT_HOST:?API_DEFAULT_HOST is not set or empty}
      - LETSENCRYPT_HOST=${API_VIRTUAL_HOST:?API_VIRTUAL_HOST is not set or empty}
    env_file:
      - docker/dev/api/.env.prod
    depends_on:
      - database
    volumes:
      - ./docker/prod/api/nginx/nginx-default.conf:/etc/nginx/nginx.conf
      - ./docker/prod/api/nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./docker/prod/api/nginx/certs/:/etc/nginx/certs/:ro
    links:
      - database
    networks:
      - nginx_proxy
      - backend
  client:
    image: ${CLIENT_IMAGE:-iracanyes/portfolio_client}
    restart: always
    environment:
      - VIRTUAL_HOST=${CLIENT_VIRTUAL_HOST:?CLIENT_VIRTUAL_HOST is not set or empty}
      - VIRTUAL_PORT=${CLIENT_VIRTUAL_PORT:?CLIENT_VIRTUAL_PORT is not set or empty}
      - VIRTUAL_PROTO=${CLIENT_VIRTUAL_PROTO:-https}
      - DEFAULT_HOST=${CLIENT_DEFAULT_HOST:?CLIENT_DEFAULT_HOST is not set or empty}
      - LETSENCRYPT_HOST=${CLIENT_VIRTUAL_HOST:?API_VIRTUAL_HOST is not set or empty}
      - LETSENCRYPT_EMAIL=${ADMIN_EMAIL:?}
    env_file:
      - docker/dev/client/.env.prod
    volumes:
      - ./docker/prod/client/nginx-default:/etc/nginx/nginx.conf:ro
      - ./docker/prod/client/conf.d/:/etc/nginx/conf.d/:ro
      - ./docker/prod/client/certs/:/etc/nginx/certs:ro
    networks:
      - nginx_proxy
    links:
      - api
    depends_on:
      - api
  database:
    image: mongo:latest
    hostname: database
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME:?MONGODB_ROOT_USERNAME is not set}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD:?MONGODB_ROOT_PASSWORD is not set}
      # Create a new database.
      # /docker-entrypoint-initdb.d/init.js has to be executed
      MONGO_INITDB_DATABASE: ${MONGODB_DB_ADMIN_NAME:?MONGODB_DB_ADMIN_NAME is not set}
      MONGODB_NON_ROOT_USERNAME: ${MONGODB_NON_ROOT_USERNAME:?MONGODB_NON_ROOT_USERNAME is not set}
      MONGODB_NON_ROOT_PASSWORD: ${MONGODB_NON_ROOT_PASSWORD:?MONGODB_NON_ROOT_PASSWORD is not set}
      MONGODB_NON_ROOT_ROLE: ${MONGODB_NON_ROOT_ROLE:?MONGODB_NON_ROOT_ROLE is not set}
      NETWORK_ACCESS: internal
    volumes:
      - ./docker/prod/db/init;js:/docker-entrypoint-initdb.d/init.js
      - ./shared/data/db:/data/db
    env_file:
      - ./.env.prod
    networks:
      - backend
    ports:
      - '27017-27019:27017-27019'
  proxy:
    image: jwilder/nginx-proxy:alpine
    restart: always
    volumes:
      - nginx_proxy:/etc/nginx/certs
      - nginx_proxy:/etc/nginx/vhost.d
      - nginx_proxy:/etc/nginx/conf.d
      # allow to write http-01 challenge from acme-companion
      - nginx_proxy:/usr/share/nginx/html
      - ./var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - nginx_proxy
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
  proxy_acme-compagnion:
    image: nginx-proxy-acme:latest
    volumes:
      - nginx_proxy
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/prod/nginx_proxy/acme.sh:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=${DEFAULT_EMAIL:?DEFAULT_EMAIL is not set or empty}
    networks:
      - nginx_proxy
volumes:
  nginx_proxy:
networks:
  nginx_proxy:
  backend: